version: '3'
services:
  strapi:
    container_name: sports_board_strapi_backend
    image: strapi/strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    links:
      - postgres:postgre
    volumes:
      - ./app:/srv/app
    # volumes:
    #   - ./backend/config:/opt/app/config
    #   - ./backend/src:/opt/app/src
    #   - ./backend/package.json:/opt/package.json
    #   - ./backend/yarn.lock:/opt/yarn.lock
    #   - ./backend/.env:/opt/app/.env
    #   - ./backend/public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    depends_on:
      - postgres

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./data:/data/postgres
    ports:
      - '5432:5432'
  
  frontend: # Name of our service
    container_name: sports_board_frontend
    build: . # path to dockerfile
    ports: # Port binding to host from docker container
      - "3000:3000" # Bind port 3000 of host to 3000 of container
    restart: always # What to do if container crashes

# version: '3'
# services:
#   strapi:
#     container_name: sports_board_strapi_backend
#     build: ./backend
#     image: strapi:latest
#     restart: unless-stopped
#     env_file: .env
#     environment:
#       DATABASE_CLIENT: ${DATABASE_CLIENT}
#       DATABASE_HOST: strapiDB
#       DATABASE_PORT: ${DATABASE_PORT}
#       DATABASE_NAME: ${DATABASE_NAME}
#       DATABASE_USERNAME: ${DATABASE_USERNAME}
#       DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#       JWT_SECRET: ${JWT_SECRET}
#       ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
#       APP_KEYS: ${APP_KEYS}
#       NODE_ENV: ${NODE_ENV}
#     volumes:
#       - ./config:/opt/app/config
#       - ./src:/opt/app/src
#       - ./package.json:/opt/package.json
#       - ./yarn.lock:/opt/yarn.lock
#       - ./.env:/opt/app/.env
#       - ./public/uploads:/opt/app/public/uploads
#     ports:
#       - '1337:1337'
#     networks:
#       - strapi
#     depends_on:
#       - strapiDB

#   strapiDB:
#     container_name: sports_board_strapiDB
#     platform: linux/amd64 #for platform error on Apple M1 chips
#     restart: unless-stopped
#     env_file: .env
#     image: postgres:12.0-alpine
#     environment:
#       POSTGRES_USER: ${DATABASE_USERNAME}
#       POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#       POSTGRES_DB: ${DATABASE_NAME}
#     volumes:
#       - strapi-data:/var/lib/postgresql/data/ #using a volume
#       #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

#     ports:
#       - '5432:5432'
#     networks:
#       - strapi

#   frontend: # Name of our service
#     container_name: sports_board_frontend
#     build: . # path to dockerfile
#     ports: # Port binding to host from docker container
#       - "3000:3000" # Bind port 3000 of host to 3000 of container
#     restart: always # What to do if container crashes
    
# volumes:
#   strapi-data:

# networks:
#   strapi:
#     name: Strapi
#     driver: bridge
 